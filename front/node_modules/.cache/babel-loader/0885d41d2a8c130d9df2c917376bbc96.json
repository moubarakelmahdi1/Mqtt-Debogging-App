{"remainingRequest":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js!C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WEB\\WLDD_hiveMQ\\src\\components\\Inbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\WEB\\WLDD_hiveMQ\\src\\components\\Inbox.vue","mtime":1560872519294},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ShowMessagePopUp from \"./ShowMessagePopUp.vue\";\nimport { unsubscribeMQTT, getMessage, returnDate, stringToRGB } from '@/assets/js/Utils.js';\nexport default {\n  name: \"Inbox\",\n  components: {\n    ShowMessagePopUp: ShowMessagePopUp\n  },\n  props: {\n    'subscribedTopics': Array\n  },\n  data: function data() {\n    return {\n      //Inbox content\n      messagesReceived: [],\n      dialog: false,\n      selectedMessage: null,\n      showTopicsSubscribed: 0,\n      subscribedTopicsTab: this.subscribedTopics\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    getMessage(function (topic, message, options) {\n      var received = {\n        message: message,\n        topic: topic,\n        options: options,\n        date: returnDate(),\n        color: stringToRGB(topic)\n      };\n\n      _this.messagesReceived.unshift(received);\n    });\n  },\n  watch: {\n    subscribedTopicsTab: function subscribedTopicsTab() {\n      this.$emit('subscribedTopics', this.subscribedTopicsTab);\n    },\n    subscribedTopics: function subscribedTopics() {\n      this.subscribedTopicsTab = this.subscribedTopics;\n    }\n  },\n  methods: {\n    //Permits to clear all the inbox\n    clearAll: function clearAll() {\n      this.messagesReceived = new Array();\n    },\n    //Permits to delete a message from the inbox\n    clearMessage: function clearMessage(index) {\n      this.messagesReceived.splice(index, 1);\n      this.selectedMessage = null;\n    },\n    //Permits to select a message in the inbox\n    selectMessage: function selectMessage(selectedMessage) {\n      this.selectedMessage = selectedMessage;\n    },\n    unsubscribe: function unsubscribe(topic, index) {\n      unsubscribeMQTT(topic);\n      this.subscribedTopicsTab.splice(index, 1);\n    }\n  }\n};",{"version":3,"sources":["Inbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA,OAAA,gBAAA;AACA,SAAA,eAAA,EAAA,UAAA,EAAA,UAAA,EAAA,WAAA,QAAA,sBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,wBAAA;AADA,GALA;AAQA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA;AACA,MAAA,gBAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,KAHA;AAIA,MAAA,eAAA,EAAA,IAJA;AAKA,MAAA,oBAAA,EAAA,CALA;AAMA,MAAA,mBAAA,EAAA,KAAA;AANA,KAAA;AAQA,GAjBA;AAkBA,EAAA,OAlBA,qBAkBA;AAAA;;AACA,IAAA,UAAA,CAAA,UAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA;AACA,UAAA,QAAA,GAAA;AACA,QAAA,OAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,OAAA,EAAA,OAHA;AAIA,QAAA,IAAA,EAAA,UAAA,EAJA;AAKA,QAAA,KAAA,EAAA,WAAA,CAAA,KAAA;AALA,OAAA;;AAOA,MAAA,KAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,QAAA;AACA,KATA,CAAA;AAWA,GA9BA;AA+BA,EAAA,KAAA,EAAA;AACA,IAAA,mBAAA,EAAA,+BAAA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,KAAA,mBAAA;AACA,KAHA;AAIA,IAAA,gBAAA,EAAA,4BAAA;AACA,WAAA,mBAAA,GAAA,KAAA,gBAAA;AACA;AANA,GA/BA;AAuCA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,sBAEA;AACA,WAAA,gBAAA,GAAA,IAAA,KAAA,EAAA;AACA,KAJA;AAMA;AACA,IAAA,YAPA,wBAOA,KAPA,EAOA;AACA,WAAA,gBAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,WAAA,eAAA,GAAA,IAAA;AACA,KAVA;AAWA;AACA,IAAA,aAZA,yBAYA,eAZA,EAYA;AACA,WAAA,eAAA,GAAA,eAAA;AACA,KAdA;AAeA,IAAA,WAfA,uBAeA,KAfA,EAeA,KAfA,EAeA;AACA,MAAA,eAAA,CAAA,KAAA,CAAA;AACA,WAAA,mBAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA;AAlBA;AAvCA,CAAA","sourcesContent":["<!--Inbox who shows message received on the topics that the user has subscribed-->\r\n<template>\r\n    <v-layout row justify-center>\r\n        <v-flex xs12 sm12 md10>\r\n            <v-card>\r\n                <v-toolbar>\r\n                    <v-toolbar-title>\r\n                        Message\r\n                    </v-toolbar-title>\r\n\r\n                    <v-spacer></v-spacer>\r\n\r\n                    <v-btn color=rgba(0,103,160,1)\r\n                           @click=\"showTopicsSubscribed=1\"\r\n                           small\r\n                           fab>\r\n                        <div class=\"button\" >{{subscribedTopics.length}}</div>\r\n                    </v-btn>\r\n\r\n                    <v-btn color=rgba(0,103,160,1)\r\n                           @click=\"clearAll()\">\r\n                        <div class=\"button\">Clear all ({{messagesReceived.length}})</div>\r\n                    </v-btn>\r\n                </v-toolbar>\r\n\r\n                <v-list>\r\n                    <template v-for=\"(messageReceived, index) in messagesReceived\">\r\n                        <v-list-tile\r\n                                :key=\"index\"\r\n                                avatar\r\n                                ripple\r\n                                @click=\"selectMessage(messageReceived)\"\r\n                                :style=\"'border-left:solid '+messageReceived.color+' 5px;'\">\r\n                            <v-list-tile-content @click=\"dialog=true\">\r\n                                <v-list-tile-title class=\"inboxContent\">{{ messageReceived.topic }}</v-list-tile-title>\r\n\r\n                                <v-list-tile-sub-title class=\"inboxContent\">\r\n                                    {{ messageReceived.message }}\r\n                                </v-list-tile-sub-title>\r\n                            </v-list-tile-content>\r\n\r\n                            <v-list-tile-action>\r\n                                <v-list-tile-action-text>QoS : {{messageReceived.options.qos}} &nbsp;&nbsp;&nbsp; {{ messageReceived.date }}</v-list-tile-action-text>\r\n                                <v-flex d-flex class=\"retainedAndClearButton\">\r\n                                    <v-list-tile-action-text v-if=\"messageReceived.options.retain==true\">Retained&nbsp;&nbsp;&nbsp;</v-list-tile-action-text>\r\n                                    <v-icon class=\"iconButton\"\r\n                                            @click=\"clearMessage(index)\">\r\n                                        remove_circle\r\n                                    </v-icon>\r\n                                </v-flex>\r\n                            </v-list-tile-action>\r\n                        </v-list-tile>\r\n\r\n                        <v-divider v-if=\"index + 1 < messagesReceived.length\" :key=\"`divider-${index}`\"></v-divider>\r\n                    </template>\r\n                </v-list>\r\n            </v-card>\r\n\r\n            <v-dialog\r\n                    v-model=\"showTopicsSubscribed\"\r\n                    width=\"700\"\r\n                    persistent=\"\">\r\n                <template v-slot:activator=\"{ on }\">\r\n\r\n                </template>\r\n\r\n                <v-card>\r\n                    <v-card-title  class=\"headline grey lighten-2\"\r\n                                   primary-title>\r\n                        Topics you subscribed at\r\n                    </v-card-title>\r\n\r\n                    <div class=\"topicList\">\r\n                        <v-flex v-for=\"(topic,index) in subscribedTopicsTab\" d-flex>\r\n                            <div class=\"topicInList\">\r\n                                <strong style=\"font-size: 20px\">.</strong>{{topic}}\r\n                                <v-icon class=\"unsubscribe\"\r\n                                        @click=\"unsubscribe(topic,index)\">\r\n                                    remove_circle\r\n                                </v-icon>\r\n                            </div>\r\n                        </v-flex>\r\n                    </div>\r\n\r\n                    <v-card-actions>\r\n                        <v-btn color=\"primary\"\r\n                               flat\r\n                               @click=\"showTopicsSubscribed=0\">\r\n                            Cancel\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-flex>\r\n\r\n        <!--Pop up who shows the complete message of a selected message-->\r\n        <ShowMessagePopUp\r\n                :dialog=\"dialog\"\r\n                @dialog=\"dialog=$event\"\r\n                :selectedMessage=\"selectedMessage\"></ShowMessagePopUp>\r\n    </v-layout>\r\n</template>\r\n\r\n<script>\r\n    import ShowMessagePopUp from './ShowMessagePopUp.vue'\r\n    import {unsubscribeMQTT,getMessage,returnDate,stringToRGB} from '@/assets/js/Utils.js';\r\n    export default {\r\n        name: \"Inbox\",\r\n        components:{\r\n            ShowMessagePopUp\r\n        },\r\n        props:{\r\n            'subscribedTopics' : Array,\r\n        },\r\n        data: function () {\r\n            return {\r\n                //Inbox content\r\n                messagesReceived:[],\r\n                dialog: false,\r\n                selectedMessage: null,\r\n                showTopicsSubscribed:0,\r\n                subscribedTopicsTab : this.subscribedTopics\r\n            }\r\n        },\r\n        mounted(){\r\n            getMessage((topic,message,options)=>{\r\n                var received = {\r\n                    message: message,\r\n                    topic: topic,\r\n                    options: options,\r\n                    date: returnDate(),\r\n                    color : stringToRGB(topic),\r\n                }\r\n                this.messagesReceived.unshift(received);\r\n            })\r\n\r\n        },\r\n        watch:{\r\n          subscribedTopicsTab:function(){\r\n              this.$emit('subscribedTopics',this.subscribedTopicsTab);\r\n          },\r\n          subscribedTopics:function(){\r\n              this.subscribedTopicsTab=this.subscribedTopics;\r\n          }\r\n        },\r\n        methods:{\r\n            //Permits to clear all the inbox\r\n            clearAll(){\r\n                this.messagesReceived=new Array();\r\n            },\r\n\r\n            //Permits to delete a message from the inbox\r\n            clearMessage(index){\r\n                this.messagesReceived.splice(index,1);\r\n                this.selectedMessage=null;\r\n            },\r\n            //Permits to select a message in the inbox\r\n            selectMessage(selectedMessage) {\r\n                this.selectedMessage = selectedMessage;\r\n            },\r\n            unsubscribe(topic,index){\r\n                unsubscribeMQTT(topic);\r\n                this.subscribedTopicsTab.splice(index,1);\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n"],"sourceRoot":"src/components"}]}