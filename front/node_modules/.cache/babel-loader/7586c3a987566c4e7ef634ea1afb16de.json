{"remainingRequest":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\thread-loader\\dist\\cjs.js!C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js!C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WEB\\WLDD_hiveMQ\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\WEB\\WLDD_hiveMQ\\src\\App.vue","mtime":1561452991871},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport axios from 'axios';\nimport config from \"./assets/js/config\";\nimport { isNotNull } from \"./assets/js/Utils\";\nexport default {\n  name: 'App',\n  components: {\n    Header: Header,\n    Body: Body,\n    Footer: Footer\n  },\n  data: function data() {\n    return {\n      isLogged: false\n    };\n  },\n  created: function created() {\n    this.configAxios();\n    this.dassoLogin();\n  },\n  methods: {\n    configAxios: function configAxios() {\n      axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n      axios.defaults.headers.common['env'] = 'WLDDMQ';\n      var token = localStorage.getItem(\"WLDDMQ_token\");\n\n      if (isNotNull(token)) {\n        axios.defaults.headers.common['authorization'] = \"Bearer \" + token;\n      }\n    },\n    dassoLogin: function dassoLogin() {\n      var self = this;\n      var token = localStorage.getItem(\"WLDDMQ_token\");\n      var isLogout = this.$route.query.logout;\n      var adminComplexId = this.$route.query.adminComplexId;\n      var needDassoLogin = false;\n\n      if (isNotNull(token)) {\n        axios.get(config.WLDDMQ_URL + \"/version\").then(function (response) {\n          if (response.status == 401) {\n            localStorage.removeItem(\"WLDDMQ_token\");\n            needDassoLogin = true;\n            self.isLogged = false;\n          } else {\n            self.isLogged = true;\n          }\n        });\n      } else if (isNotNull(adminComplexId)) {\n        localStorage.removeItem(\"WLDDMQ_token\");\n        var params = new URLSearchParams();\n        params.append('adminComplexId', adminComplexId);\n        axios.post(config.WLDDMQ_URL + \"/admin/authenticate\", params).then(function (response) {\n          if (response.status == 200) {\n            self.isLogged = true;\n            localStorage.setItem(\"WLDDMQ_token\", response.data.token);\n            localStorage.setItem(\"WLDDMQ_das\", response.data.das);\n            localStorage.setItem(\"WLDDMQ_name\", response.data.name);\n            localStorage.setItem(\"WLDDMQ_email\", response.data.email);\n            localStorage.setItem(\"WLDDMQ_isAdmin\", response.data.isAdmin);\n            localStorage.setItem(\"WLDDMQ_id\", response.data.id);\n            self.isLogged = true;\n            self.$router.push('/');\n          } else {\n            alert(\"Error on get token\");\n          }\n        });\n      } else if (isNotNull(isLogout) && isLogout == \"true\") {\n        var clientId = config.CLIENT_ID;\n        var redirectUri = encodeURI(config.CLIENT_CALLBACK);\n        var dassoLogin = config.OAUTH2_SERVER + \"/authorize.php?client_id=\" + clientId + \"&response_type=code&redirect_uri=\" + redirectUri;\n        window.location.replace(dassoLogin);\n      } else {\n        needDassoLogin = true;\n        self.isLogged = false;\n      }\n\n      if (needDassoLogin) {\n        this.dassoLogout();\n      }\n    },\n    dassoLogout: function dassoLogout() {\n      var dassoLogout = config.OAUTH2_SERVER + \"/login.php?action=logout&redirect=\" + encodeURI(window.location.href + \"?logout=true\");\n      window.location.replace(dassoLogout);\n    }\n  },\n  watch: {\n    '$route': function $route() {\n      this.configAxios();\n      this.dassoLogin();\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app v-if=\"isLogged\">\n    <Header></Header>\n    <v-content>\n      <v-container fluid grid-list-xl>\n        <Body></Body>\n      </v-container>\n    </v-content>\n    <Footer></Footer>\n  </v-app>\n</template>\n\n\n<script>\n  import Header from './components/Header'\n  import Body from './components/Body'\n  import Footer from './components/Footer'\n  import axios from 'axios';\n  import config from './assets/js/config';\n  import {isNotNull} from \"./assets/js/Utils\";\n\n  export default {\n    name: 'App',\n    components: {\n      Header,\n      Body,\n      Footer\n    },\n    data() {\n      return {\n        isLogged: false\n      }\n    },\n    created(){\n      this.configAxios();\n      this.dassoLogin();\n    },\n    methods: {\n      configAxios(){\n        axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n        axios.defaults.headers.common['env'] = 'WLDDMQ';\n        var token = localStorage.getItem(\"WLDDMQ_token\");\n        if(isNotNull(token)) {\n          axios.defaults.headers.common['authorization'] = \"Bearer \" + token;\n        }\n      },\n      dassoLogin(){\n        var self = this;\n        var token = localStorage.getItem(\"WLDDMQ_token\");\n        var isLogout = this.$route.query.logout;\n        var adminComplexId = this.$route.query.adminComplexId;\n        var needDassoLogin = false;\n        if(isNotNull(token)){\n          axios.get(config.WLDDMQ_URL + \"/version\")\n                  .then(function (response) {\n                    if (response.status == 401) {\n                      localStorage.removeItem(\"WLDDMQ_token\");\n                      needDassoLogin = true;\n                      self.isLogged = false;\n                    }else{\n                      self.isLogged = true;\n                    }\n                  })\n        }else if(isNotNull(adminComplexId)){\n          localStorage.removeItem(\"WLDDMQ_token\");\n\n          var params = new URLSearchParams();\n          params.append('adminComplexId', adminComplexId);\n\n          axios.post(config.WLDDMQ_URL + \"/admin/authenticate\", params)\n                  .then(function (response) {\n                    if (response.status == 200) {\n                      self.isLogged = true;\n                      localStorage.setItem(\"WLDDMQ_token\", response.data.token);\n                      localStorage.setItem(\"WLDDMQ_das\", response.data.das);\n                      localStorage.setItem(\"WLDDMQ_name\", response.data.name);\n                      localStorage.setItem(\"WLDDMQ_email\", response.data.email);\n                      localStorage.setItem(\"WLDDMQ_isAdmin\", response.data.isAdmin);\n                      localStorage.setItem(\"WLDDMQ_id\", response.data.id);\n\n                      self.isLogged = true;\n                      self.$router.push('/');\n                    }else{\n                      alert(\"Error on get token\");\n                    }\n                  })\n        }else if(isNotNull(isLogout) && isLogout == \"true\"){\n          var clientId = config.CLIENT_ID;\n          var redirectUri = encodeURI(config.CLIENT_CALLBACK);\n          var dassoLogin = config.OAUTH2_SERVER + \"/authorize.php?client_id=\" + clientId + \"&response_type=code&redirect_uri=\" + redirectUri;\n          window.location.replace(dassoLogin);\n        }else{\n          needDassoLogin = true;\n          self.isLogged = false;\n        }\n        if(needDassoLogin){\n          this.dassoLogout();\n        }\n      },\n      dassoLogout(){\n        var dassoLogout = config.OAUTH2_SERVER + \"/login.php?action=logout&redirect=\" + encodeURI(window.location.href + \"?logout=true\");\n        window.location.replace(dassoLogout);\n      }\n    },\n    watch:{\n      '$route': function() {\n        this.configAxios();\n        this.dassoLogin();\n      }\n    }\n  }\n\n</script>"],"sourceRoot":"src"}]}