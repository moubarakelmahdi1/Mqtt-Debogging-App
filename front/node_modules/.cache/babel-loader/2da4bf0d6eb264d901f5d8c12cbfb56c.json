{"remainingRequest":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js!C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WEB\\WLDD_hiveMQ\\src\\components\\AddingPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\WEB\\WLDD_hiveMQ\\src\\components\\AddingPanel.vue","mtime":1561452991856},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { config } from '@/assets/js/Utils.js';\nimport axios from 'axios';\n\nvar HashMap = require('hashmap');\n\nexport default {\n  name: \"AddingPanel\",\n  props: {\n    'selected': Object,\n    'userGroups': Array,\n    'demonstrations': Array,\n    'selectedActionIndex': Number,\n    'selectedDemoIndex': Number\n  },\n  data: function data() {\n    return {\n      //Adding variables\n      newDemoName: '',\n      newActionName: '',\n      newActionTopic: '',\n      newActionMessage: '',\n      userGroupList: '',\n      parametersMap: new HashMap(),\n      parametersIds: new HashMap(),\n      popUpMessage: 0,\n      popUpTopic: 0,\n      newDefaultValues: [],\n      addedPopUp: false,\n      type: ''\n    };\n  },\n  methods: {\n    //Permits to add a new demonstration\n    addDemo: function addDemo() {\n      var _this = this;\n\n      var items = document.getElementsByClassName('checkboxesInAddingPanel');\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].type == 'checkbox') items[i].checked = false;\n      }\n\n      if (this.newDemoName.length > 0) {\n        this.userGroups.forEach(function (userGroup) {\n          if (userGroup.isSelected == true) {\n            _this.userGroupList = _this.userGroupList + userGroup.id + '|';\n            userGroup.isSelected = false;\n          }\n        });\n\n        if (this.userGroupList.length > 0) {\n          axios.post(config.baseLink + '/demo/addDemo?name=' + encodeURI(this.newDemoName) + '&userGroupsIds=' + encodeURI(this.userGroupList) + '&adminId=' + localStorage.getItem(\"WLDDMQ_id\")).then(function (responses) {\n            _this.$parent.update();\n\n            _this.newDemoName = '';\n            _this.userGroupList = '';\n            _this.type = \"Demonstration\";\n            _this.addedPopUp = true;\n          }, function (response) {\n            console.log('erreur', response);\n          });\n        } else {\n          alert('Select demonstration user groups!');\n        }\n      } else {\n        alert('Fill demonstration name!');\n      }\n    },\n    //Permits to Add a new action for a demonstration\n    addAction: function addAction() {\n      var _this2 = this;\n\n      if (this.newActionName.length > 0 && this.newActionTopic.length > 0) {\n        axios.post(config.baseLink + '/action/addAction?demoId=' + this.selected.id + '&name=' + encodeURI(this.newActionName) + '&topic=' + encodeURI(this.newActionTopic) + '&message=' + encodeURI(this.newActionMessage) + '&adminId=' + localStorage.getItem(\"WLDDMQ_id\")).then(function (responses) {\n          _this2.$parent.update(function () {\n            _this2.showParamsPopUp('topic', _this2.$parent.demonstrations);\n          });\n        }, function (response) {\n          console.log('erreur', response);\n        });\n      } else {\n        alert('Fill action name and topic!');\n      }\n    },\n    //Permits to show the popUp to fill parameters\n    showParamsPopUp: function showParamsPopUp(type, demonstrations) {\n      var _this3 = this;\n\n      var regex = /\\{\\{[a-zA-Z0-9]*\\}\\}/gm;\n      var matches;\n\n      if (type == 'topic') {\n        matches = this.newActionTopic.matchAll(regex);\n      } else if (type == 'message') {\n        matches = this.newActionMessage.matchAll(regex);\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var match = _step.value;\n\n          _this3.parametersMap.set(match[0], match[0]);\n\n          if (type == 'topic') {\n            _this3.parametersIds.set(match[0], demonstrations[_this3.selectedDemoIndex].action.filter(function (element) {\n              return element.topic == _this3.newActionTopic && element.name == _this3.newActionName;\n            })[0].parametersTopics.filter(function (element) {\n              return element.parameter == match[0];\n            })[0].id);\n          } else if (type == 'message') {\n            _this3.parametersIds.set(match[0], demonstrations[_this3.selectedDemoIndex].action.filter(function (element) {\n              return element.message == _this3.newActionMessage && element.name == _this3.newActionName;\n            })[0].parametersMessages.filter(function (element) {\n              return element.parameter == match[0];\n            })[0].id);\n          }\n        };\n\n        for (var _iterator = matches[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (this.parametersMap.size > 0) {\n        if (type == 'topic') {\n          this.popUpTopic = 1;\n        } else if (type == 'message') {\n          this.popUpMessage = 1;\n        }\n      } else {\n        if (type == 'topic') {\n          this.$parent.update(function () {\n            _this3.showParamsPopUp('message', _this3.$parent.demonstrations);\n          });\n        } else {\n          this.showAddedPopUp();\n        }\n      }\n    },\n    //Permits to close param adding modal\n    closeParamEditing: function closeParamEditing() {\n      this.popUpTopic = 0;\n      this.popUpMessage = 0;\n      this.parametersMap = new HashMap();\n      this.parametersIds = new HashMap();\n      this.newDefaultValues = [];\n    },\n    //Permits to fill default parameter values\n    setDefaultParams: function setDefaultParams(type) {\n      var _this4 = this;\n\n      var toSend = new Array();\n\n      for (var i = 0; i < this.parametersIds.size; i++) {\n        var temp = new Object();\n        temp.id = this.parametersIds.values()[i];\n        temp.value = this.newDefaultValues[i];\n        toSend.push(temp);\n      }\n\n      axios.post(config.baseLink + '/parameters/addAllParametersDefaultValues?jsonString=' + encodeURI(JSON.stringify(toSend))).then(function (responses) {\n        if (type == 'topic') {\n          _this4.$parent.update(function () {\n            _this4.showParamsPopUp('message', _this4.$parent.demonstrations);\n          });\n\n          _this4.closeParamEditing();\n        } else {\n          _this4.$parent.update();\n\n          _this4.closeParamEditing();\n\n          _this4.showAddedPopUp();\n        }\n      }, function (response) {\n        console.log('erreur', response);\n      });\n    },\n    //Permits to show a popUp when we add an action\n    showAddedPopUp: function showAddedPopUp() {\n      this.newActionName = '';\n      this.newActionMessage = '';\n      this.newActionTopic = '';\n      this.type = \"Action\";\n      this.addedPopUp = true;\n    }\n  }\n};",{"version":3,"sources":["AddingPanel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-flex d-flex offset-md1 md10 >\r\n        <v-flex  md6 xs6>\r\n            <v-expansion-panel>\r\n                <v-expansion-panel-content>\r\n                    <template v-slot:header>\r\n                        <div class=\"strongTexts\">Add Demonstration</div>\r\n                    </template>\r\n\r\n                    <v-flex offset-md1 md10>\r\n                        </br>\r\n\r\n\r\n                        <v-form @submit.prevent>\r\n                            <v-text-field\r\n                                    label=\"Demonstration Name\"\r\n                                    v-model=\"newDemoName\"\r\n                                    box>\r\n                            </v-text-field>\r\n\r\n                            <div class=\"userGroups\">\r\n                                <v-flex v-for=\"userGroup in userGroups\" xs5 offset-xs1>\r\n                                    <!--Checkboxes to select certain topics-->\r\n                                    <input @click=\"userGroup.isSelected=!userGroup.isSelected\" type=\"checkbox\" :id=\"userGroup.id\" class=\"checkboxesInAddingPanel\">\r\n                                    <div slot=\"label\">\r\n                                        {{userGroup.name}}\r\n                                    </div>\r\n                                </v-flex>\r\n                            </div>\r\n\r\n                            <br>\r\n\r\n                            <v-flex>\r\n                                <v-btn  type=\"submit\"\r\n                                        class=\"addButton\"\r\n                                       color=rgba(0,103,160,1)\r\n                                       @click=\"addDemo()\">\r\n                                    <div class=\"button\">ADD DEMO</div>\r\n                                </v-btn>\r\n                            </v-flex>\r\n                        </v-form>\r\n                    </v-flex>\r\n                </v-expansion-panel-content>\r\n            </v-expansion-panel>\r\n        </v-flex>\r\n\r\n        <v-flex offset-md1 md6 xs6 offset-xs1>\r\n            <v-expansion-panel v-if=\"selected!=null\">\r\n                <v-expansion-panel-content>\r\n                    <template v-slot:header>\r\n                        <div class=\"strongTexts\">Add Action</div>\r\n                    </template>\r\n\r\n                    <v-flex offset-md1 md10 offset-xs1>\r\n                        </br>\r\n\r\n                        <v-form @submit.prevent>\r\n                            <v-text-field\r\n                                    label=\"Action Name\"\r\n                                    v-model=\"newActionName\"\r\n                                    box>\r\n                            </v-text-field>\r\n\r\n                            <v-text-field\r\n                                    label=\"Action Topic\"\r\n                                    v-model=\"newActionTopic\"\r\n                                    box>\r\n                            </v-text-field>\r\n\r\n                            <v-textarea\r\n                                    label=\"Action Message\"\r\n                                    v-model=\"newActionMessage\"\r\n                                    box>\r\n                            </v-textarea>\r\n\r\n                            <v-flex>\r\n                                <v-btn  type=\"submit\"\r\n                                        class=\"addButton\"\r\n                                       color=rgba(0,103,160,1)\r\n                                       @click=\"addAction()\">\r\n                                    <div class=\"button\">ADD ACTION</div>\r\n                                </v-btn>\r\n                            </v-flex>\r\n                        </v-form>\r\n                    </v-flex>\r\n                </v-expansion-panel-content>\r\n            </v-expansion-panel>\r\n\r\n            <!--PopUp permitting to change parameters to the message to send-->\r\n            <v-dialog\r\n                    v-model=\"popUpMessage\"\r\n                    width=\"500\"\r\n                    persistent=\"\">\r\n                <template v-slot:activator=\"{ on }\">\r\n\r\n                </template>\r\n\r\n                <v-card>\r\n                    <v-card-title  class=\"headline grey lighten-2\"\r\n                                   primary-title>\r\n                        Fill default parameters for Message\r\n                    </v-card-title>\r\n\r\n                    </br>\r\n\r\n                    <v-form @submit.prevent>\r\n                        <v-flex d-flex\r\n                                v-for=\"index in parametersMap.size\">\r\n                            <v-flex md3 offset-md1 offset-xs1>\r\n                                <div class=\"parameters\">\r\n                                    {{parametersMap.keys()[index-1]}}\r\n                                </div>\r\n                            </v-flex>\r\n                            <v-flex md6 d-flex>\r\n                                <v-text-field\r\n                                        v-model=\"newDefaultValues[index-1]\"\r\n                                        solo>\r\n                                </v-text-field>\r\n                            </v-flex>\r\n                        </v-flex>\r\n\r\n                        <v-card-actions>\r\n                            <v-spacer></v-spacer>\r\n\r\n                            <v-btn  type=\"submit\"\r\n                                    color=\"primary\"\r\n                                    flat\r\n                                    @click=\"setDefaultParams('message')\">\r\n                                Apply\r\n                            </v-btn>\r\n                        </v-card-actions>\r\n                    </v-form>\r\n                </v-card>\r\n            </v-dialog>\r\n\r\n            <!--PopUp permitting to change parameters to the topic where we want to publish-->\r\n            <v-dialog\r\n                    v-model=\"popUpTopic\"\r\n                    width=\"500\"\r\n                    persistent=\"\">\r\n                <template v-slot:activator=\"{ on }\">\r\n\r\n                </template>\r\n\r\n                <v-card>\r\n                    <v-card-title  class=\"headline grey lighten-2\"\r\n                                   primary-title>\r\n                        Fill default parameters for Topic\r\n                    </v-card-title>\r\n\r\n                    </br>\r\n\r\n                    <v-form @submit.prevent>\r\n                        <v-flex d-flex\r\n                                v-for=\"index in parametersMap.size\">\r\n                            <v-flex md3 offset-md1 offset-xs1>\r\n                                <div class=\"parameters\">\r\n                                    {{parametersMap.keys()[index-1]}}\r\n                                </div>\r\n                            </v-flex>\r\n                            <v-flex md6 d-flex>\r\n                                <v-text-field\r\n                                        v-model=\"newDefaultValues[index-1]\"\r\n                                        solo>\r\n                                </v-text-field>\r\n                            </v-flex>\r\n                        </v-flex>\r\n\r\n                        <v-card-actions>\r\n                            <v-spacer></v-spacer>\r\n\r\n                            <v-btn  type=\"submit\"\r\n                                    color=\"primary\"\r\n                                    flat\r\n                                    @click=\"setDefaultParams('topic')\">\r\n                                Apply\r\n                            </v-btn>\r\n                        </v-card-actions>\r\n                    </v-form>\r\n                </v-card>\r\n            </v-dialog>\r\n\r\n            <v-dialog v-model=\"addedPopUp\"\r\n                      class=\"headline grey lighten-2\"\r\n                      primary-title\r\n                      max-width=\"200\">\r\n                <template v-slot:activator=\"{ on }\">\r\n\r\n                </template>\r\n\r\n                <v-card>\r\n                    <v-card-title  class=\"headline grey lighten-2\"\r\n                                   primary-title>\r\n                        {{type}} added\r\n                    </v-card-title>\r\n\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n\r\n                        <v-btn\r\n                                color=\"primary\"\r\n                                flat\r\n                                @click=\"addedPopUp=false\">\r\n                            Close\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-flex>\r\n    </v-flex>\r\n</template>\r\n\r\n<script>\r\n    import {config} from '@/assets/js/Utils.js';\r\n    import axios from 'axios';\r\n    var HashMap = require('hashmap');\r\n\r\n    export default {\r\n        name: \"AddingPanel\",\r\n        props:{\r\n            'selected' : Object,\r\n            'userGroups' : Array,\r\n            'demonstrations': Array,\r\n            'selectedActionIndex': Number,\r\n            'selectedDemoIndex': Number,\r\n        },\r\n        data: function () {\r\n            return {\r\n                //Adding variables\r\n                newDemoName:'',\r\n                newActionName:'',\r\n                newActionTopic:'',\r\n                newActionMessage:'',\r\n                userGroupList : '',\r\n                parametersMap: new HashMap(),\r\n                parametersIds: new HashMap(),\r\n                popUpMessage: 0,\r\n                popUpTopic: 0,\r\n                newDefaultValues:[],\r\n                addedPopUp : false,\r\n                type : '',\r\n            }\r\n        },\r\n        methods: {\r\n            //Permits to add a new demonstration\r\n            addDemo() {\r\n                var items = document.getElementsByClassName('checkboxesInAddingPanel');\r\n                for (var i = 0; i < items.length; i++) {\r\n                    if (items[i].type == 'checkbox')\r\n                        items[i].checked = false;\r\n                }\r\n\r\n                if(this.newDemoName.length>0)\r\n                {\r\n                    this.userGroups.forEach(userGroup => {\r\n                        if (userGroup.isSelected == true) {\r\n                            this.userGroupList = this.userGroupList + userGroup.id + '|';\r\n                            userGroup.isSelected = false;\r\n                        }\r\n                    })\r\n                    if(this.userGroupList.length>0)\r\n                    {\r\n                        axios\r\n                            .post(config.baseLink + '/demo/addDemo?name=' + encodeURI(this.newDemoName) + '&userGroupsIds=' + encodeURI(this.userGroupList)+'&adminId='+localStorage.getItem(\"WLDDMQ_id\"))\r\n                            .then((responses) => {\r\n                                this.$parent.update();\r\n                                this.newDemoName = '';\r\n                                this.userGroupList = '';\r\n                                this.type = \"Demonstration\";\r\n                                this.addedPopUp = true;\r\n                            }, (response) => {\r\n                                console.log('erreur', response)\r\n                            })\r\n                    }\r\n                    else {\r\n                        alert('Select demonstration user groups!')\r\n                        }\r\n\r\n                }\r\n                else{\r\n                    alert('Fill demonstration name!')\r\n                }\r\n\r\n            },\r\n            //Permits to Add a new action for a demonstration\r\n            addAction() {\r\n                if(this.newActionName.length>0&&this.newActionTopic.length>0)\r\n                {\r\n                    axios\r\n                        .post(config.baseLink + '/action/addAction?demoId=' + this.selected.id + '&name=' + encodeURI(this.newActionName) + '&topic=' + encodeURI(this.newActionTopic) + '&message=' + encodeURI(this.newActionMessage)+'&adminId='+localStorage.getItem(\"WLDDMQ_id\"))\r\n                        .then((responses) => {\r\n                            this.$parent.update(()=>{\r\n                                this.showParamsPopUp('topic',this.$parent.demonstrations);\r\n                            });\r\n                        }, (response) => {\r\n                            console.log('erreur', response)\r\n                        })\r\n                }\r\n                else{\r\n                    alert('Fill action name and topic!')\r\n                }\r\n\r\n            },\r\n            //Permits to show the popUp to fill parameters\r\n            showParamsPopUp(type,demonstrations) {\r\n                const regex = /\\{\\{[a-zA-Z0-9]*\\}\\}/gm;\r\n                let matches;\r\n                if (type == 'topic') {\r\n                    matches = this.newActionTopic.matchAll(regex);\r\n                } else if (type == 'message') {\r\n                    matches = this.newActionMessage.matchAll(regex);\r\n                }\r\n                for (const match of matches) {\r\n                    this.parametersMap.set(match[0], match[0]);\r\n                    if (type == 'topic') {\r\n                        this.parametersIds.set(match[0], demonstrations[this.selectedDemoIndex].action.filter(element => element.topic == this.newActionTopic&&element.name==this.newActionName)[0].parametersTopics.filter(element => element.parameter == match[0])[0].id);\r\n                    } else if (type == 'message') {\r\n                        this.parametersIds.set(match[0], demonstrations[this.selectedDemoIndex].action.filter(element => element.message == this.newActionMessage&&element.name==this.newActionName)[0].parametersMessages.filter(element => element.parameter == match[0])[0].id);\r\n                    }\r\n                }\r\n                if (this.parametersMap.size > 0) {\r\n                    if (type == 'topic') {\r\n                        this.popUpTopic = 1;\r\n                    } else if (type == 'message') {\r\n                        this.popUpMessage = 1;\r\n                    }\r\n                } else {\r\n                    if (type == 'topic') {\r\n                        this.$parent.update(() => {\r\n                            this.showParamsPopUp('message', this.$parent.demonstrations);\r\n                        });\r\n                    }\r\n                    else{\r\n                        this.showAddedPopUp();\r\n                    }\r\n                }\r\n            },\r\n            //Permits to close param adding modal\r\n            closeParamEditing(){\r\n                this.popUpTopic = 0;\r\n                this.popUpMessage = 0;\r\n                this.parametersMap = new HashMap();\r\n                this.parametersIds = new HashMap();\r\n                this.newDefaultValues = [];\r\n            },\r\n            //Permits to fill default parameter values\r\n            setDefaultParams(type)\r\n            {\r\n                var toSend = new Array();\r\n                for (var i = 0; i < this.parametersIds.size; i++) {\r\n                    var temp = new Object();\r\n                    temp.id = this.parametersIds.values()[i];\r\n                    temp.value = this.newDefaultValues[i];\r\n                    toSend.push(temp);\r\n                }\r\n                axios\r\n                    .post(config.baseLink + '/parameters/addAllParametersDefaultValues?jsonString='+encodeURI(JSON.stringify(toSend)))\r\n                    .then((responses) => {\r\n                        if (type == 'topic') {\r\n                            this.$parent.update(() => {\r\n                                this.showParamsPopUp('message', this.$parent.demonstrations);\r\n                            });\r\n                            this.closeParamEditing();\r\n                        } else {\r\n                            this.$parent.update();\r\n                            this.closeParamEditing();\r\n                            this.showAddedPopUp();\r\n                        }\r\n                    }, (response) => {\r\n                        console.log('erreur', response)\r\n                    })\r\n            },\r\n            //Permits to show a popUp when we add an action\r\n            showAddedPopUp(){\r\n                this.newActionName = '';\r\n                this.newActionMessage = '';\r\n                this.newActionTopic = '';\r\n                this.type = \"Action\";\r\n                this.addedPopUp = true;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n"],"sourceRoot":"src/components"}]}