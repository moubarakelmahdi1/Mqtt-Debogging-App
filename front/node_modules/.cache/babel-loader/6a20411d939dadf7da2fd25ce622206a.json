{"remainingRequest":"C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\babel-loader\\lib\\index.js!C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\src\\components\\SubscribePanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\src\\components\\SubscribePanel.vue","mtime":1560871104449},{"path":"C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projet Info\\Projet Worldline\\wldd_hivemq\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar matchAll = require(\"match-all\");\n\nvar HashMap = require('hashmap');\n\nimport { subscribeMQTT } from '@/assets/js/Utils.js';\nexport default {\n  name: 'SubscribePanel',\n  props: {\n    'demonstrations': Array,\n    'subscribedTopics': Array,\n    'selectedDemoIndex': Number,\n    'oldValuesTab': Array\n  },\n  data: function data() {\n    return {\n      popUpSubscribe: 0,\n      parametersMap: new HashMap(),\n      topicOriginal: '',\n      topicSubscribe: '',\n      addTopic: 0,\n      newTopicSubscription: '',\n      defaultMap: new HashMap(),\n      topicSubscribed: [],\n      oldValues: [{\n        \"key\": \"{{test}}\",\n        \"value\": \"{{test}}\"\n      }]\n    };\n  },\n  watch: {\n    topicSubscribed: function topicSubscribed() {\n      this.$emit('subscribedTopics', this.topicSubscribed);\n    },\n    selectedDemoIndex: function selectedDemoIndex() {\n      var items = document.getElementsByClassName('checkboxes');\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].type == 'checkbox') items[i].checked = false;\n      }\n    },\n    oldValues: function oldValues() {\n      this.$emit('oldValuesTab', this.oldValues);\n    },\n    oldValuesTab: function oldValuesTab() {\n      this.oldValues = this.oldValuesTab;\n    }\n  },\n  methods: {\n    //Permits to replace parameters\n    replaceText: function replaceText() {\n      var _this = this;\n\n      for (var i = 0; i < this.parametersMap.size; i++) {\n        this.demonstrations.some(function (element) {\n          element.action.forEach(function (act) {\n            if (act.topicOriginal == _this.topicOriginal) {\n              act.topicSubscribe = _this.topicSubscribe.replace(_this.parametersMap.keys()[i], _this.parametersMap.values()[i]);\n              _this.topicSubscribe = act.topicSubscribe;\n            }\n          });\n        });\n        var temp = new Object();\n        var res = 1;\n        temp.key = this.parametersMap.keys()[i];\n        temp.value = this.parametersMap.values()[i];\n\n        for (var j = 0; j < this.oldValues.length; j++) {\n          if (this.oldValues[i].key == temp.key) {\n            this.oldValues[i].value = this.parametersMap.values()[i];\n            res = 0;\n          }\n        }\n\n        if (res) {\n          this.oldValues.push(temp);\n        }\n      }\n\n      this.popUpSubscribe = 0;\n      this.parametersMap = new HashMap();\n      this.defaultMap = new HashMap();\n    },\n    //Permits to show parameters popUp for the topic we want to subscribe at\n    showPopUpSubscribe: function showPopUpSubscribe(action) {\n      var _this2 = this;\n\n      if (!document.getElementById(action.name).checked == false) {\n        var i;\n\n        (function () {\n          action.isSelected = true;\n          document.getElementById(action.name).checked = true;\n          var regex = /{{([a-zA-Z0-9]*)}}/gm;\n          _this2.topicSubscribe = action.topicOriginal;\n          _this2.topicOriginal = action.topicOriginal;\n          action.topicSubscribe = action.topicOriginal;\n          var matches = matchAll(action.topicOriginal, regex).toArray();\n\n          for (i = 0; i < matches.length; i++) {\n            _this2.parametersMap.set('{{' + matches[i] + '}}', '{{' + matches[i] + '}}');\n\n            _this2.defaultMap.set('{{' + matches[i] + '}}', action.parametersTopics.filter(function (element) {\n              return element.parameter == '{{' + matches[i] + '}}';\n            })[0].parameterDefaultValue);\n          }\n\n          if (_this2.parametersMap.size > 0) {\n            _this2.popUpSubscribe = 1;\n          }\n        })();\n      } else {\n        document.getElementById(action.name).checked = false;\n        action.isSelected = false;\n      }\n    },\n    //Permits to subscribe to a topic\n    subscribeTopic: function subscribeTopic() {\n      var _this3 = this;\n\n      this.demonstrations[this.selectedDemoIndex].action.forEach(function (action) {\n        if (action.isSelected) {\n          subscribeMQTT(action.topicSubscribe);\n          var res = 0;\n\n          _this3.topicSubscribed.find(function (element) {\n            if (element == action.topicSubscribe) {\n              res = 1;\n            }\n\n            return res;\n          });\n\n          if (!res) {\n            _this3.topicSubscribed.push(action.topicSubscribe);\n          } else {\n            console.log('coucou');\n          }\n        }\n\n        action.isSelected = false;\n        document.getElementById(action.name).checked = false;\n      });\n    },\n    subscribeNewTopic: function subscribeNewTopic() {\n      if (this.newTopicSubscription.length > 0) {\n        var res = 0;\n        var newTopic = this.newTopicSubscription;\n\n        if (newTopic != '') {\n          this.topicSubscribed.find(function (element) {\n            if (element == newTopic) {\n              res = 1;\n            }\n\n            return res;\n          });\n\n          if (!res) {\n            this.topicSubscribed.push(newTopic);\n          }\n\n          subscribeMQTT(this.newTopicSubscription);\n        }\n\n        this.cancelNewTopicSubscribtion();\n      } else {\n        alert('Fill new topic name!');\n      }\n    },\n    setDefaultValue: function setDefaultValue(index) {\n      this.parametersMap.set(this.parametersMap.keys()[index - 1], this.defaultMap.values()[index - 1]);\n      this.$refs.parameterContentTopic[index - 1].value = this.defaultMap.values()[index - 1];\n    },\n    setValue: function setValue(index, $event) {\n      this.parametersMap.set(this.parametersMap.keys()[index - 1], $event);\n      this.$refs.parameterContentTopic[index - 1].value = $event;\n    },\n    cancelNewTopicSubscribtion: function cancelNewTopicSubscribtion() {\n      this.newTopicSubscription = '';\n      this.addTopic = 0;\n    },\n    setOldValue: function setOldValue(type, index) {\n      var temp = this.findOldValue(index);\n      this.parametersMap.set(this.parametersMap.keys()[index - 1], temp);\n      this.$refs.parameterContentTopic[index - 1].value = temp;\n    },\n    findOldValue: function findOldValue(index) {\n      var temp = '';\n\n      for (var i = 0; i < this.oldValues.length; i++) {\n        if (this.oldValues[i].key == this.parametersMap.keys()[index - 1]) {\n          temp = this.oldValues[i].value;\n          this.parametersMap.set(this.oldValues[i].key, temp);\n        }\n      }\n\n      return temp;\n    }\n  }\n};",{"version":3,"sources":["SubscribePanel.vue"],"names":[],"mappings":"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","sourcesContent":["<!--Subscribe panel permitting to subscribe to certain topics and receive message from them-->\r\n<template>\r\n    <v-flex offset-xs1>\r\n        <v-flex>\r\n            <v-expansion-panel v-if=\"demonstrations[selectedDemoIndex]!=null\">\r\n                <v-expansion-panel-content>\r\n                    <template v-slot:header>\r\n                        <div class=\"strongTexts\">Subscribe</div>\r\n                    </template>\r\n\r\n                    <v-card>\r\n                        <div class=\"subscribesGroup\">\r\n                            <v-flex v-for=\"action in demonstrations[selectedDemoIndex].action\"\r\n                                    md4\r\n                                    xs-4\r\n                                    offset-xs1\r\n                                    offset-md1>\r\n\r\n                                <br>\r\n\r\n                                <v-flex>\r\n                                        <input @click=\"showPopUpSubscribe(action)\" type=\"checkbox\" :id=\"action.name\" class=\"checkboxes\">\r\n                                </v-flex>\r\n\r\n                                <label class=\"subscribeLabels\">{{action.name}}</label>\r\n\r\n                            </v-flex>\r\n\r\n                            <v-flex>\r\n                                <!--Subscribe button permitting to subscribe to the topics selected by the user-->\r\n                                <v-btn class=\"subscribeButton\"\r\n                                       color=rgba(0,103,160,1)\r\n                                       @click=\"subscribeTopic()\">\r\n                                    <div class=\"button\">Subscribe</div>\r\n                                </v-btn>\r\n\r\n                                <v-btn class=\"subscribeButton\"\r\n                                       color=rgba(0,103,160,1)\r\n                                       @click=\"addTopic = 1\">\r\n                                    <div class=\"button\">Add Topic Subscribtion</div>\r\n                                </v-btn>\r\n                            </v-flex>\r\n                        </div>\r\n                    </v-card>\r\n                </v-expansion-panel-content>\r\n            </v-expansion-panel>\r\n        </v-flex>\r\n\r\n        <v-dialog\r\n                v-model=\"popUpSubscribe\"\r\n                width=\"500\"\r\n                persistent=\"\">\r\n            <template v-slot:activator=\"{ on }\">\r\n\r\n            </template>\r\n\r\n            <v-card>\r\n                <v-card-title  class=\"headline grey lighten-2\"\r\n                               primary-title>\r\n                    Fill parameters for Topic\r\n                </v-card-title>\r\n\r\n                </br>\r\n\r\n                <v-form @submit.prevent>\r\n                    <v-flex d-flex\r\n                            v-for=\"index in parametersMap.size\">\r\n                        <v-flex md3 offset-md1 offset-xs1>\r\n                            <div class=\"parameters\">\r\n                                {{parametersMap.keys()[index-1]}}\r\n                            </div>\r\n                        </v-flex>\r\n                        <v-flex md8 d-flex>\r\n                            <v-text-field\r\n                                    ref=\"parameterContentTopic\"\r\n                                    @change=\"setValue(index,$event)\"\r\n                                    :value=\"findOldValue(index)\"\r\n                                    solo>\r\n                            </v-text-field>\r\n                            <div class=\"defaultValuebutton\">\r\n                                <v-tooltip top>\r\n                                    <template v-slot:activator=\"{ on }\">\r\n                                        <v-btn fab small @click=\"setDefaultValue(index)\" v-on=\"on\">\r\n                                            <v-icon dark>build</v-icon>\r\n                                        </v-btn>\r\n                                    </template>\r\n                                    <span>{{defaultMap.values()[index-1]}}</span>\r\n                                </v-tooltip>\r\n                            </div>\r\n                        </v-flex>\r\n                    </v-flex>\r\n\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n\r\n                        <v-btn  type=\"submit\"\r\n                                color=\"primary\"\r\n                                flat\r\n                                @click=\"replaceText()\">\r\n                            Apply\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-form>\r\n            </v-card>\r\n        </v-dialog>\r\n\r\n        <v-dialog\r\n                v-model=\"addTopic\"\r\n                width=\"500\"\r\n                persistent=\"\">\r\n            <template v-slot:activator=\"{ on }\">\r\n\r\n            </template>\r\n\r\n            <v-card>\r\n                <v-card-title  class=\"headline grey lighten-2\"\r\n                               primary-title>\r\n                    Enter topic\r\n                </v-card-title>\r\n\r\n                <v-text-field v-model=\"newTopicSubscription\"\r\n                              label=\"Topic\"\r\n                              solo>\r\n                </v-text-field>\r\n\r\n                <v-card-actions>\r\n                    <v-btn color=\"primary\"\r\n                           flat\r\n                           @click=\"cancelNewTopicSubscribtion()\">\r\n                        Cancel\r\n                    </v-btn>\r\n\r\n                    <v-spacer></v-spacer>\r\n\r\n                    <v-btn  color=\"primary\"\r\n                            flat\r\n                            @click=\"subscribeNewTopic()\">\r\n                        Add\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </v-flex>\r\n</template>\r\n\r\n<script>\r\n    const matchAll = require(\"match-all\");\r\n    var HashMap = require('hashmap');\r\n    import {subscribeMQTT} from '@/assets/js/Utils.js';\r\n\r\n    export default {\r\n        name: 'SubscribePanel',\r\n        props: {\r\n            'demonstrations': Array,\r\n            'subscribedTopics' : Array,\r\n            'selectedDemoIndex': Number,\r\n            'oldValuesTab' : Array\r\n        },\r\n        data: function () {\r\n            return {\r\n                popUpSubscribe: 0,\r\n                parametersMap: new HashMap(),\r\n                topicOriginal: '',\r\n                topicSubscribe: '',\r\n                addTopic : 0,\r\n                newTopicSubscription : '',\r\n                defaultMap: new HashMap(),\r\n                topicSubscribed : [],\r\n                oldValues : [{\"key\":\"{{test}}\",\"value\":\"{{test}}\"}],\r\n            }\r\n        },\r\n        watch:{\r\n          topicSubscribed:function(){\r\n              this.$emit('subscribedTopics',this.topicSubscribed);\r\n          },\r\n          selectedDemoIndex:function(){\r\n              var items = document.getElementsByClassName('checkboxes');\r\n              for (var i = 0; i < items.length; i++) {\r\n                  if (items[i].type == 'checkbox')\r\n                      items[i].checked = false;\r\n              }\r\n          },\r\n          oldValues:function(){\r\n              this.$emit('oldValuesTab',this.oldValues);\r\n          },\r\n          oldValuesTab:function(){\r\n              this.oldValues = this.oldValuesTab;\r\n          }\r\n        },\r\n        methods: {\r\n            //Permits to replace parameters\r\n            replaceText() {\r\n                for (var i = 0; i < this.parametersMap.size; i++) {\r\n                    this.demonstrations.some(element => {\r\n                        element.action.forEach(act =>{\r\n                            if (act.topicOriginal == this.topicOriginal) {\r\n                                act.topicSubscribe = this.topicSubscribe.replace(this.parametersMap.keys()[i], this.parametersMap.values()[i]);\r\n                                this.topicSubscribe = act.topicSubscribe;\r\n                            }\r\n                        })\r\n                    });\r\n                    var temp = new Object();\r\n                    var res=1;\r\n                    temp.key = this.parametersMap.keys()[i];\r\n                    temp.value = this.parametersMap.values()[i];\r\n                    for(var j=0;j<this.oldValues.length;j++){\r\n                        if(this.oldValues[i].key==temp.key){\r\n                            this.oldValues[i].value = this.parametersMap.values()[i];\r\n                            res=0;\r\n                        }\r\n                    }\r\n                    if(res){\r\n                        this.oldValues.push(temp);\r\n                    }\r\n                }\r\n                this.popUpSubscribe = 0;\r\n                this.parametersMap = new HashMap();\r\n                this.defaultMap = new HashMap();\r\n            },\r\n\r\n            //Permits to show parameters popUp for the topic we want to subscribe at\r\n            showPopUpSubscribe(action) {\r\n                if(!document.getElementById(action.name).checked==false)\r\n                {\r\n                    action.isSelected = true;\r\n                    document.getElementById(action.name).checked = true;\r\n                    const regex = /{{([a-zA-Z0-9]*)}}/gm;\r\n                    this.topicSubscribe = action.topicOriginal;\r\n                    this.topicOriginal = action.topicOriginal;\r\n                    action.topicSubscribe = action.topicOriginal;\r\n                    let matches = matchAll(action.topicOriginal,regex).toArray();\r\n                    for (var i=0; i < matches.length; i++) {\r\n                        this.parametersMap.set('{{'+matches[i]+'}}','{{'+ matches[i]+'}}');\r\n                        this.defaultMap.set('{{'+matches[i]+'}}', action.parametersTopics.filter(element => element.parameter =='{{'+matches[i]+'}}')[0].parameterDefaultValue);\r\n                    }\r\n                    if(this.parametersMap.size>0)\r\n                    {\r\n                        this.popUpSubscribe = 1;\r\n                    }\r\n                }\r\n                else{\r\n                    document.getElementById(action.name).checked = false;\r\n                    action.isSelected = false;\r\n\r\n                }\r\n            },\r\n\r\n            //Permits to subscribe to a topic\r\n            subscribeTopic() {\r\n                this.demonstrations[this.selectedDemoIndex].action.forEach((action) => {\r\n                    if (action.isSelected) {\r\n                        subscribeMQTT(action.topicSubscribe);\r\n                        var res = 0;\r\n                        this.topicSubscribed.find(function(element){\r\n                            if(element == action.topicSubscribe){\r\n                                res = 1;\r\n                            }\r\n                            return res;\r\n                        })\r\n                        if(!res){\r\n                            this.topicSubscribed.push(action.topicSubscribe);\r\n                        }else{\r\n                            console.log('coucou')\r\n                        }\r\n                    }\r\n                    action.isSelected = false;\r\n                    document.getElementById(action.name).checked = false;\r\n                })\r\n            },\r\n\r\n            subscribeNewTopic(){\r\n                if(this.newTopicSubscription.length>0)\r\n                {\r\n                    var res = 0;\r\n                    var newTopic = this.newTopicSubscription;\r\n                    if(newTopic!='')\r\n                    {\r\n                        this.topicSubscribed.find(function(element){\r\n                            if(element == newTopic){\r\n                                res = 1;\r\n                            }\r\n                            return res;\r\n                        })\r\n                        if(!res){\r\n                            this.topicSubscribed.push(newTopic);\r\n                        }\r\n                        subscribeMQTT(this.newTopicSubscription);\r\n                    }\r\n                    this.cancelNewTopicSubscribtion();\r\n                }\r\n                else{\r\n                    alert('Fill new topic name!');\r\n                }\r\n            },\r\n\r\n            setDefaultValue(index) {\r\n                this.parametersMap.set(this.parametersMap.keys()[index-1], this.defaultMap.values()[index-1]);\r\n                    this.$refs.parameterContentTopic[index-1].value=this.defaultMap.values()[index-1];\r\n            },\r\n\r\n            setValue(index,$event){\r\n                this.parametersMap.set(this.parametersMap.keys()[index-1],$event);\r\n                    this.$refs.parameterContentTopic[index-1].value=$event;\r\n            },\r\n\r\n            cancelNewTopicSubscribtion(){\r\n                this.newTopicSubscription = '';\r\n                this.addTopic = 0;\r\n            },\r\n            setOldValue(type,index) {\r\n                var temp=this.findOldValue(index);\r\n                this.parametersMap.set(this.parametersMap.keys()[index-1],temp );\r\n                    this.$refs.parameterContentTopic[index-1].value=temp;\r\n            },\r\n            findOldValue(index){\r\n                var temp='';\r\n                for(var i=0;i<this.oldValues.length;i++){\r\n                    if(this.oldValues[i].key==this.parametersMap.keys()[index-1]){\r\n                        temp = this.oldValues[i].value;\r\n                        this.parametersMap.set(this.oldValues[i].key,temp);\r\n                    }\r\n                }\r\n                return temp;\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components"}]}