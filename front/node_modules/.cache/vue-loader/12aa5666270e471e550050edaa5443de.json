{"remainingRequest":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WEB\\WLDD_hiveMQ\\src\\components\\ConnectionPopUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\WEB\\WLDD_hiveMQ\\src\\components\\ConnectionPopUp.vue","mtime":1560778219555},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {connectMQTT} from '@/assets/js/Utils.js';\nexport default {\n    name: \"ConnectionPopUp\",\n    props:{\n        'connection' : Boolean,\n        'userGroups' : Array,\n    },\n    data:function(){\n        return {\n            //Connexion variables\n            username:'',\n            password:'',\n            port:'8000',\n            host:'mqtt.rd.atosworldline.com',\n            connectionModal: true,\n            connectionError: false,\n            selectedUserGroup : {\n                id:1,\n                isSelected:false,\n                name:'WLDD',\n            },\n        }\n    },\n    watch:{\n        connectionModal:function(){\n            this.$emit('connection',this.connectionModal);\n        },\n        selectedUserGroup:function(){\n            this.$emit('selectedUserGroup',this.selectedUserGroup);\n        }\n    },\n    methods:{\n        //Permits to connect the user\n        connect(){\n            if(this.selectedUserGroup!=null){\n                connectMQTT(this.host,this.username,this.password,this.port,()=>{\n                    this.connectionModal = false;\n                    this.$parent.update();\n                },()=>{\n                    this.connectionError = true;\n                })\n            }\n            else{\n                this.connectionError = true;\n            }\n\n        },\n    }\n}\n",{"version":3,"sources":["ConnectionPopUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ConnectionPopUp.vue","sourceRoot":"src/components","sourcesContent":["<!--Connection PopUp-->\r\n<template>\r\n    <v-dialog\r\n            v-model=\"connection\"\r\n            width=\"500\"\r\n            persistent>\r\n        <template v-slot:activator=\"{ on }\">\r\n\r\n        </template>\r\n\r\n        <v-card>\r\n            <v-card-title  class=\"headline grey lighten-2\"\r\n                           primary-title>\r\n                Connection\r\n            </v-card-title>\r\n\r\n            <br>\r\n\r\n            <v-form @submit.prevent>\r\n                <v-select solo\r\n                          v-model=\"selectedUserGroup\"\r\n                          :items=\"userGroups\"\r\n                          item-text=\"name\"\r\n                          label=\"User Group\"\r\n                          class=\"strongTexts\"\r\n                          return-object\r\n                ></v-select>\r\n\r\n                <v-text-field v-model=\"host\"\r\n                              label=\"Host\"\r\n                              solo>\r\n                </v-text-field>\r\n\r\n                <v-text-field v-model=\"port\"\r\n                              label=\"Port\"\r\n                              solo>\r\n                </v-text-field>\r\n\r\n                <v-text-field v-model=\"username\"\r\n                              label=\"Username\"\r\n                              solo>\r\n                </v-text-field>\r\n\r\n                <v-text-field v-model=\"password\"\r\n                              label=\"Password\"\r\n                              solo\r\n                              :type=\"'password'\">\r\n                </v-text-field>\r\n\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n\r\n                    <v-btn  type=\"submit\"\r\n                            color=\"primary\"\r\n                            flat\r\n                            @click=\"connect()\">\r\n                        Connect\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-form>\r\n\r\n\r\n\r\n            <v-alert type=\"error\"\r\n                     v-model=\"connectionError\">\r\n                Error on connection\r\n            </v-alert>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\n    import {connectMQTT} from '@/assets/js/Utils.js';\r\n    export default {\r\n        name: \"ConnectionPopUp\",\r\n        props:{\r\n            'connection' : Boolean,\r\n            'userGroups' : Array,\r\n        },\r\n        data:function(){\r\n            return {\r\n                //Connexion variables\r\n                username:'',\r\n                password:'',\r\n                port:'8000',\r\n                host:'mqtt.rd.atosworldline.com',\r\n                connectionModal: true,\r\n                connectionError: false,\r\n                selectedUserGroup : {\r\n                    id:1,\r\n                    isSelected:false,\r\n                    name:'WLDD',\r\n                },\r\n            }\r\n        },\r\n        watch:{\r\n            connectionModal:function(){\r\n                this.$emit('connection',this.connectionModal);\r\n            },\r\n            selectedUserGroup:function(){\r\n                this.$emit('selectedUserGroup',this.selectedUserGroup);\r\n            }\r\n        },\r\n        methods:{\r\n            //Permits to connect the user\r\n            connect(){\r\n                if(this.selectedUserGroup!=null){\r\n                    connectMQTT(this.host,this.username,this.password,this.port,()=>{\r\n                        this.connectionModal = false;\r\n                        this.$parent.update();\r\n                    },()=>{\r\n                        this.connectionError = true;\r\n                    })\r\n                }\r\n                else{\r\n                    this.connectionError = true;\r\n                }\r\n\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n"]}]}