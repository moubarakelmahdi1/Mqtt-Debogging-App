{"remainingRequest":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WEB\\WLDD_hiveMQ\\src\\components\\Inbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\WEB\\WLDD_hiveMQ\\src\\components\\Inbox.vue","mtime":1558963114560},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ShowMessagePopUp from './ShowMessagePopUp.vue'\nimport {getMessage,returnDate,stringToRGB} from '@/assets/js/Utils.js';\nexport default {\n    name: \"Inbox\",\n    components:{\n        ShowMessagePopUp\n    },\n    props:{\n        'subscribedTopics' : Array,\n    },\n    data: function () {\n        return {\n            //Inbox content\n            messagesReceived:[],\n            dialog: false,\n            selectedMessage: null,\n            showTopicsSubscribed:0,\n        }\n    },\n    mounted(){\n        getMessage((topic,message,qos)=>{\n            var received = {\n                message: message,\n                topic: topic,\n                qos: qos,\n                date: returnDate(),\n                color : stringToRGB(topic),\n            }\n            this.messagesReceived.unshift(received);\n        })\n\n    },\n    methods:{\n        //Permits to clear all the inbox\n        clearAll(){\n            this.messagesReceived=new Array();\n        },\n\n        //Permits to delete a message from the inbox\n        clearMessage(index){\n            this.messagesReceived.splice(index,1);\n            this.selectedMessage=null;\n        },\n        //Permits to select a message in the inbox\n        selectMessage(selectedMessage) {\n            this.selectedMessage = selectedMessage;\n        }\n    }\n}\n\n",{"version":3,"sources":["Inbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Inbox.vue","sourceRoot":"src/components","sourcesContent":["<!--Inbox who shows message received on the topics that the user has subscribed-->\r\n<template>\r\n    <v-layout row justify-center>\r\n        <v-flex xs12 sm12 md10>\r\n            <v-card>\r\n                <v-toolbar>\r\n                    <v-toolbar-title>\r\n                        Message\r\n                    </v-toolbar-title>\r\n\r\n                    <v-spacer></v-spacer>\r\n\r\n                    <v-btn color=rgba(0,103,160,1)\r\n                           @click=\"showTopicsSubscribed=1\">\r\n                        <div class=\"button\" >TOPICS:{{subscribedTopics.length}}</div>\r\n                    </v-btn>\r\n\r\n                    <v-btn color=rgba(0,103,160,1)\r\n                           @click=\"clearAll()\">\r\n                        <div class=\"button\">Clear all ({{messagesReceived.length}})</div>\r\n                    </v-btn>\r\n                </v-toolbar>\r\n\r\n                <v-list>\r\n                    <template v-for=\"(messageReceived, index) in messagesReceived\">\r\n                        <v-list-tile\r\n                                :key=\"index\"\r\n                                avatar\r\n                                ripple\r\n                                @click=\"selectMessage(messageReceived)\"\r\n                                :style=\"'border-left:solid '+messageReceived.color+' 5px;'\">\r\n                            <v-list-tile-content @click=\"dialog=true\">\r\n                                <v-list-tile-title class=\"inboxContent\">{{ messageReceived.topic }}</v-list-tile-title>\r\n\r\n                                <v-list-tile-sub-title class=\"inboxContent\">\r\n                                    {{ messageReceived.message }}\r\n                                </v-list-tile-sub-title>\r\n                            </v-list-tile-content>\r\n\r\n                            <v-list-tile-action>\r\n                                <v-list-tile-action-text>QoS : {{messageReceived.qos.qos}} &nbsp;&nbsp;&nbsp; {{ messageReceived.date }}</v-list-tile-action-text>\r\n                                <v-flex d-flex class=\"retainedAndClearButton\">\r\n                                    <v-list-tile-action-text v-if=\"messageReceived.qos.retain==true\">Retained&nbsp;&nbsp;&nbsp;</v-list-tile-action-text>\r\n                                    <v-icon class=\"iconButton\"\r\n                                            @click=\"clearMessage(index)\">\r\n                                        remove_circle\r\n                                    </v-icon>\r\n                                </v-flex>\r\n                            </v-list-tile-action>\r\n                        </v-list-tile>\r\n\r\n                        <v-divider v-if=\"index + 1 < messagesReceived.length\" :key=\"`divider-${index}`\"></v-divider>\r\n                    </template>\r\n                </v-list>\r\n            </v-card>\r\n\r\n            <v-dialog\r\n                    v-model=\"showTopicsSubscribed\"\r\n                    width=\"700\"\r\n                    persistent=\"\">\r\n                <template v-slot:activator=\"{ on }\">\r\n\r\n                </template>\r\n\r\n                <v-card>\r\n                    <v-card-title  class=\"headline grey lighten-2\"\r\n                                   primary-title>\r\n                        Topics you subscribed at\r\n                    </v-card-title>\r\n\r\n                    <div class=\"topicList\">\r\n                        <v-flex v-for=\"topic in subscribedTopics\">\r\n                            <div class=\"topicInList\">\r\n                                <strong style=\"font-size: 20px\">.</strong>{{topic}}\r\n                            </div>\r\n                        </v-flex>\r\n                    </div>\r\n\r\n                    <v-card-actions>\r\n                        <v-btn color=\"primary\"\r\n                               flat\r\n                               @click=\"showTopicsSubscribed=0\">\r\n                            Cancel\r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-flex>\r\n\r\n        <!--Pop up who shows the complete message of a selected message-->\r\n        <ShowMessagePopUp\r\n                :dialog=\"dialog\"\r\n                @dialog=\"dialog=$event\"\r\n                :selectedMessage=\"selectedMessage\"></ShowMessagePopUp>\r\n    </v-layout>\r\n</template>\r\n\r\n<script>\r\n    import ShowMessagePopUp from './ShowMessagePopUp.vue'\r\n    import {getMessage,returnDate,stringToRGB} from '@/assets/js/Utils.js';\r\n    export default {\r\n        name: \"Inbox\",\r\n        components:{\r\n            ShowMessagePopUp\r\n        },\r\n        props:{\r\n            'subscribedTopics' : Array,\r\n        },\r\n        data: function () {\r\n            return {\r\n                //Inbox content\r\n                messagesReceived:[],\r\n                dialog: false,\r\n                selectedMessage: null,\r\n                showTopicsSubscribed:0,\r\n            }\r\n        },\r\n        mounted(){\r\n            getMessage((topic,message,qos)=>{\r\n                var received = {\r\n                    message: message,\r\n                    topic: topic,\r\n                    qos: qos,\r\n                    date: returnDate(),\r\n                    color : stringToRGB(topic),\r\n                }\r\n                this.messagesReceived.unshift(received);\r\n            })\r\n\r\n        },\r\n        methods:{\r\n            //Permits to clear all the inbox\r\n            clearAll(){\r\n                this.messagesReceived=new Array();\r\n            },\r\n\r\n            //Permits to delete a message from the inbox\r\n            clearMessage(index){\r\n                this.messagesReceived.splice(index,1);\r\n                this.selectedMessage=null;\r\n            },\r\n            //Permits to select a message in the inbox\r\n            selectMessage(selectedMessage) {\r\n                this.selectedMessage = selectedMessage;\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n"]}]}