{"remainingRequest":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\WEB\\WLDD_hiveMQ\\src\\components\\Selector.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\WEB\\WLDD_hiveMQ\\src\\components\\Selector.vue","mtime":1558606160414},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\WEB\\WLDD_hiveMQ\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {config} from '@/assets/js/Utils.js';\nimport axios from 'axios';\nexport default {\n    name: 'Selector',\n    props:{\n        'demonstrations':Array,\n        'deletePopUp' : Boolean,\n        'editPopUp' : Boolean,\n        'selectedActionIndex' : Number,\n        'showBtn' : Number,\n        'actionPanel' : Number,\n    },\n    data: function () {\n        return {\n            selected : null,\n            showActionPanel:null,\n            demoIndex : null,\n            actionIndex : this.selectedActionIndex,\n            deleteModal:this.deletePopUp,\n            editModal : this.editPopUp,\n            showButtons : this.showBtn,\n        }\n    },\n    watch:{\n        selected(){\n            this.$emit('selected',this.selected);\n            this.$emit('showActionPanel',this.showActionPanel);\n            if(this.selected!=null){\n                this.demonstrations.forEach(element =>{\n                    if(element.id==this.selected.id)\n                    {\n                        console.log(this.demonstrations.indexOf(element));\n                        this.demoIndex = this.demonstrations.indexOf(element);\n                    }\n                })\n            }\n            this.$emit('selectedDemoIndex',this.demoIndex);\n        },\n        showActionPanel(){\n            this.$emit('showActionPanel',this.showActionPanel);\n        },\n        deletePopUp:function(){\n            this.deleteModal = this.deletePopUp;\n        },\n        deleteModal:function(){\n            this.$emit('deletePopUp',this.deleteModal);\n        },\n        editPopUp:function(){\n            this.editModal = this.editPopUp;\n        },\n        editModal:function(){\n            this.$emit('editPopUp',this.editModal);\n        },\n        showButtons:function(){\n            this.$emit('showBtn',this.showButtons);\n        },\n        showBtn:function(){\n            this.showButtons = this.showBtn;\n        },\n        actionIndex:function(){\n            this.$emit('selectedActionIndex',this.actionIndex);\n        },\n        selectedActionIndex:function(){\n            this.actionIndex=this.selectedActionIndex;\n        }\n    },\n    methods: {\n        atInput() {\n            this.showActionPanel = 0;\n            this.showButtons = 0;\n        },\n        changeSorting(direction) {\n            var temp = null;\n            if(direction=='left'){\n                temp = this.demonstrations[this.demoIndex].action[this.actionIndex-1];\n            }\n            else if(direction=='right'){\n                temp = this.demonstrations[this.demoIndex].action[this.actionIndex+1];\n            }\n            axios\n                .post(config.baseLink+'/action/editActionSorting?actionId='+this.demonstrations[this.demoIndex].action[this.actionIndex].id+'&permutedActionId='+temp.id+'&actionSort='+this.demonstrations[this.demoIndex].action[this.actionIndex].sort+'&permutedActionSort='+temp.sort)\n                .then((responses) =>{\n                    this.$parent.update();\n                    if(direction=='left'){\n                        this.actionIndex = this.actionIndex-1;\n                    }\n                    else if(direction=='right'){\n                        this.actionIndex = this.actionIndex+1;\n                    }\n                }, (response)=>{\n                    console.log('erreur',response)\n                })\n        }\n    }\n}\n",{"version":3,"sources":["Selector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Selector.vue","sourceRoot":"src/components","sourcesContent":["<!--Drop down menu to select the demonstration-->\r\n<template>\r\n    <v-flex md2 offset-md1>\r\n        <v-select solo\r\n                  v-model=\"selected\"\r\n                  :items=\"demonstrations\"\r\n                  item-text=\"name\"\r\n                  label=\"Demonstrations\"\r\n                  class=\"strongTexts\"\r\n                  return-object\r\n                  @input=\"atInput()\"\r\n        ></v-select>\r\n\r\n        <div v-if=\"selectedActionIndex!=null&&showButtons&&actionPanel!=null&&demonstrations[demoIndex].action.length>0\" class=\"editButtons\">\r\n            <v-btn\r\n                    small class=\"button\"\r\n                   color=rgba(0,103,160,1)\r\n                   @click=\"editModal=true\">\r\n                <div class=\"button\">EDIT</div>\r\n            </v-btn>\r\n\r\n            <v-btn small class=\"button\"\r\n                   color=rgba(0,103,160,1)\r\n                   @click=\"deleteModal=true\">\r\n                <div class=\"button\">DELETE</div>\r\n            </v-btn>\r\n        </div>\r\n\r\n        <br>\r\n\r\n        <div v-if=\"selectedActionIndex!=null&&showButtons&&actionPanel!=null&&demonstrations[demoIndex].action.length>0\" class=\"editButtons\">\r\n            <v-btn  v-if=\"actionIndex!=0\"\r\n                    small class=\"button\"\r\n                    color=rgba(0,103,160,1)\r\n                    @click=\"changeSorting('left')\">\r\n                <div class=\"button\"><</div>\r\n            </v-btn>\r\n\r\n            <v-btn  v-if=\"actionIndex<demonstrations[demoIndex].action.length-1\"\r\n                    small class=\"button\"\r\n                    color=rgba(0,103,160,1)\r\n                    @click=\"changeSorting('right')\">\r\n                <div class=\"button\">></div>\r\n            </v-btn>\r\n        </div>\r\n\r\n    </v-flex>\r\n</template>\r\n\r\n<script>\r\n    import {config} from '@/assets/js/Utils.js';\r\n    import axios from 'axios';\r\n    export default {\r\n        name: 'Selector',\r\n        props:{\r\n            'demonstrations':Array,\r\n            'deletePopUp' : Boolean,\r\n            'editPopUp' : Boolean,\r\n            'selectedActionIndex' : Number,\r\n            'showBtn' : Number,\r\n            'actionPanel' : Number,\r\n        },\r\n        data: function () {\r\n            return {\r\n                selected : null,\r\n                showActionPanel:null,\r\n                demoIndex : null,\r\n                actionIndex : this.selectedActionIndex,\r\n                deleteModal:this.deletePopUp,\r\n                editModal : this.editPopUp,\r\n                showButtons : this.showBtn,\r\n            }\r\n        },\r\n        watch:{\r\n            selected(){\r\n                this.$emit('selected',this.selected);\r\n                this.$emit('showActionPanel',this.showActionPanel);\r\n                if(this.selected!=null){\r\n                    this.demonstrations.forEach(element =>{\r\n                        if(element.id==this.selected.id)\r\n                        {\r\n                            console.log(this.demonstrations.indexOf(element));\r\n                            this.demoIndex = this.demonstrations.indexOf(element);\r\n                        }\r\n                    })\r\n                }\r\n                this.$emit('selectedDemoIndex',this.demoIndex);\r\n            },\r\n            showActionPanel(){\r\n                this.$emit('showActionPanel',this.showActionPanel);\r\n            },\r\n            deletePopUp:function(){\r\n                this.deleteModal = this.deletePopUp;\r\n            },\r\n            deleteModal:function(){\r\n                this.$emit('deletePopUp',this.deleteModal);\r\n            },\r\n            editPopUp:function(){\r\n                this.editModal = this.editPopUp;\r\n            },\r\n            editModal:function(){\r\n                this.$emit('editPopUp',this.editModal);\r\n            },\r\n            showButtons:function(){\r\n                this.$emit('showBtn',this.showButtons);\r\n            },\r\n            showBtn:function(){\r\n                this.showButtons = this.showBtn;\r\n            },\r\n            actionIndex:function(){\r\n                this.$emit('selectedActionIndex',this.actionIndex);\r\n            },\r\n            selectedActionIndex:function(){\r\n                this.actionIndex=this.selectedActionIndex;\r\n            }\r\n        },\r\n        methods: {\r\n            atInput() {\r\n                this.showActionPanel = 0;\r\n                this.showButtons = 0;\r\n            },\r\n            changeSorting(direction) {\r\n                var temp = null;\r\n                if(direction=='left'){\r\n                    temp = this.demonstrations[this.demoIndex].action[this.actionIndex-1];\r\n                }\r\n                else if(direction=='right'){\r\n                    temp = this.demonstrations[this.demoIndex].action[this.actionIndex+1];\r\n                }\r\n                axios\r\n                    .post(config.baseLink+'/action/editActionSorting?actionId='+this.demonstrations[this.demoIndex].action[this.actionIndex].id+'&permutedActionId='+temp.id+'&actionSort='+this.demonstrations[this.demoIndex].action[this.actionIndex].sort+'&permutedActionSort='+temp.sort)\r\n                    .then((responses) =>{\r\n                        this.$parent.update();\r\n                        if(direction=='left'){\r\n                            this.actionIndex = this.actionIndex-1;\r\n                        }\r\n                        else if(direction=='right'){\r\n                            this.actionIndex = this.actionIndex+1;\r\n                        }\r\n                    }, (response)=>{\r\n                        console.log('erreur',response)\r\n                    })\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}